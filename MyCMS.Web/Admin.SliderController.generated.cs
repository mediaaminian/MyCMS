// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MyCMS.Web.Areas.Admin.Controllers
{
    public partial class SliderController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SliderController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddSlider()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddSlider);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditSlider()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditSlider);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ConfirmDelete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConfirmDelete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SliderController Actions { get { return MVC.Admin.Slider; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Slider";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Slider";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GetSliderDataTable = "GetSliderDataTable";
            public readonly string Add = "Add";
            public readonly string AddSlider = "AddSlider";
            public readonly string EditSlider = "EditSlider";
            public readonly string ConfirmDelete = "ConfirmDelete";
            public readonly string Delete = "Delete";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GetSliderDataTable = "GetSliderDataTable";
            public const string Add = "Add";
            public const string AddSlider = "AddSlider";
            public const string EditSlider = "EditSlider";
            public const string ConfirmDelete = "ConfirmDelete";
            public const string Delete = "Delete";
        }


        static readonly ActionParamsClass_GetSliderDataTable s_params_GetSliderDataTable = new ActionParamsClass_GetSliderDataTable();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSliderDataTable GetSliderDataTableParams { get { return s_params_GetSliderDataTable; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSliderDataTable
        {
            public readonly string page = "page";
            public readonly string count = "count";
            public readonly string order = "order";
            public readonly string orderBy = "orderBy";
        }
        static readonly ActionParamsClass_AddSlider s_params_AddSlider = new ActionParamsClass_AddSlider();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddSlider AddSliderParams { get { return s_params_AddSlider; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddSlider
        {
            public readonly string SliderModel = "SliderModel";
        }
        static readonly ActionParamsClass_EditSlider s_params_EditSlider = new ActionParamsClass_EditSlider();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditSlider EditSliderParams { get { return s_params_EditSlider; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditSlider
        {
            public readonly string id = "id";
            public readonly string SliderModel = "SliderModel";
        }
        static readonly ActionParamsClass_ConfirmDelete s_params_ConfirmDelete = new ActionParamsClass_ConfirmDelete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ConfirmDelete ConfirmDeleteParams { get { return s_params_ConfirmDelete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ConfirmDelete
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _Add = "_Add";
                public readonly string _ConfirmDelete = "_ConfirmDelete";
                public readonly string _EditSlider = "_EditSlider";
                public readonly string _Index = "_Index";
                public readonly string _NavBar = "_NavBar";
                public readonly string _SearchBar = "_SearchBar";
                public readonly string _SliderDataTable = "_SliderDataTable";
            }
            public readonly string _Add = "~/Areas/Admin/Views/Slider/_Add.cshtml";
            public readonly string _ConfirmDelete = "~/Areas/Admin/Views/Slider/_ConfirmDelete.cshtml";
            public readonly string _EditSlider = "~/Areas/Admin/Views/Slider/_EditSlider.cshtml";
            public readonly string _Index = "~/Areas/Admin/Views/Slider/_Index.cshtml";
            public readonly string _NavBar = "~/Areas/Admin/Views/Slider/_NavBar.cshtml";
            public readonly string _SearchBar = "~/Areas/Admin/Views/Slider/_SearchBar.cshtml";
            public readonly string _SliderDataTable = "~/Areas/Admin/Views/Slider/_SliderDataTable.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_SliderController : MyCMS.Web.Areas.Admin.Controllers.SliderController
    {
        public T4MVC_SliderController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetSliderDataTableOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int page, int count, MyCMS.Servicelayer.EFServices.Enums.Order order, MyCMS.Servicelayer.EFServices.Enums.SliderOrderBy orderBy);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetSliderDataTable(int page, int count, MyCMS.Servicelayer.EFServices.Enums.Order order, MyCMS.Servicelayer.EFServices.Enums.SliderOrderBy orderBy)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSliderDataTable);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "count", count);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "order", order);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderBy", orderBy);
            GetSliderDataTableOverride(callInfo, page, count, order, orderBy);
            return callInfo;
        }

        [NonAction]
        partial void AddOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Add()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Add);
            AddOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddSliderOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MyCMS.Model.AdminModel.AddSliderModel SliderModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddSlider(MyCMS.Model.AdminModel.AddSliderModel SliderModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddSlider);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SliderModel", SliderModel);
            AddSliderOverride(callInfo, SliderModel);
            return callInfo;
        }

        [NonAction]
        partial void EditSliderOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditSlider(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditSlider);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EditSliderOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EditSliderOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MyCMS.Model.AdminModel.EditSliderModel SliderModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditSlider(MyCMS.Model.AdminModel.EditSliderModel SliderModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditSlider);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SliderModel", SliderModel);
            EditSliderOverride(callInfo, SliderModel);
            return callInfo;
        }

        [NonAction]
        partial void ConfirmDeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ConfirmDelete(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConfirmDelete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ConfirmDeleteOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
